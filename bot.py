import requests
from bs4 import BeautifulSoup
import telebot
import time
import threading
from telebot import types

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞
API_TOKEN = '8081177731:AAHi6xBekqBeOxsxweLd7P-075UobWS38j8'
bot = telebot.TeleBot(API_TOKEN)

# ID —á–∞—Ç–∞
CHAT_ID = '437225657'

# URL –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "–ì—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –¥–∏–∑–∞–π–Ω"
KWORK_URL = "https://kwork.ru/projects?c=15"

# –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
KEYWORDS = [
    "–ª–æ–≥–æ—Ç–∏–ø", "–±–∞–Ω–Ω–µ—Ä", "–æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ YouTube", "–æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ Twitch", "–æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ VK",
    "–∞–≤–∞—Ç–∞—Ä–∫–∞", "–ø—Ä–µ–≤—å—é", "–∏–∫–æ–Ω–∫–∏", "—Ñ–∏—Ä–º–µ–Ω–Ω—ã–π —Å—Ç–∏–ª—å", "–¥–∏–∑–∞–π–Ω –≤–∏–∑–∏—Ç–∫–∏",
    "–¥–∏–∑–∞–π–Ω –±—É–∫–ª–µ—Ç–∞", "–¥–∏–∑–∞–π–Ω —Ñ–ª–∞–µ—Ä–∞", "–¥–∏–∑–∞–π–Ω —É–ø–∞–∫–æ–≤–∫–∏",
    "–∏–Ω—Ñ–æ–≥—Ä–∞—Ñ–∏–∫–∞", "–∏–ª–ª—é—Å—Ç—Ä–∞—Ü–∏—è", "–ø–æ—Å—Ç–µ—Ä", "—Å—Ç–∏–∫–µ—Ä—ã",
    "–¥–∏–∑–∞–π–Ω –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏", "–≤–µ–±-–¥–∏–∑–∞–π–Ω", "–æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –ø–æ—Å—Ç–æ–≤", "–∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–π –¥–∏–∑–∞–π–Ω",
    "–ª–∏—Å—Ç–æ–≤–∫–∞", "—Ñ–ª–∞–µ—Ä", "–¥–∏–∑–∞–π–Ω –ª–∏—Å—Ç–æ–≤–∫–∏", "–¥–∏–∑–∞–π–Ω —Ñ–ª–∞–µ—Ä–∞", "—Ä–µ–∫–ª–∞–º–Ω–∞—è –ª–∏—Å—Ç–æ–≤–∫–∞",
    "—Ä–µ–∫–ª–∞–º–Ω—ã–π —Ñ–ª–∞–µ—Ä", "–±—Ä–µ–Ω–¥–æ–≤–∞—è –ª–∏—Å—Ç–æ–≤–∫–∞", "–±—Ä–µ–Ω–¥–æ–≤—ã–π —Ñ–ª–∞–µ—Ä", "–ª–∏—Å—Ç–æ–≤–∫–∞ –¥–ª—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è",
    "—Ñ–ª–∞–µ—Ä –¥–ª—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è", "–ø—Ä–æ–º–æ-–ª–∏—Å—Ç–æ–≤–∫–∞", "–ø—Ä–æ–º–æ-—Ñ–ª–∞–µ—Ä", "–≤–∏–∑–∏—Ç–∫–∞", "–¥–∏–∑–∞–π–Ω –≤–∏–∑–∏—Ç–∫–∏",
    "–≤–∏–∑–∏—Ç–Ω–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞", "–±—Ä–µ–Ω–¥–æ–≤–∞—è –≤–∏–∑–∏—Ç–∫–∞", "–∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–∞—è –≤–∏–∑–∏—Ç–∫–∞", "–ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è –≤–∏–∑–∏—Ç–∫–∞",
    "–≤–∏–∑–∏—Ç–∫–∞ –¥–ª—è –∫–æ–º–ø–∞–Ω–∏–∏", "–≤–∏–∑–∏—Ç–∫–∞ –¥–ª—è –±–∏–∑–Ω–µ—Å–∞", "–∫—Ä–µ–∞—Ç–∏–≤–Ω–∞—è –≤–∏–∑–∏—Ç–∫–∞", "–ø—Ä–µ–º–∏—É–º –≤–∏–∑–∏—Ç–∫–∞",
    "—ç–∫—Å–∫–ª—é–∑–∏–≤–Ω–∞—è –≤–∏–∑–∏—Ç–∫–∞", "YouTube", "Twitch", "VK"
]

# –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –∑–∞–∫–∞–∑–æ–≤ –±–µ–∑ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ —Å—Ç–æ–ø-—Å–ª–æ–≤–∞–º
def get_kwork_orders():
    headers = {"User-Agent": "Mozilla/5.0"}
    orders = []

    for page in range(1, 5):
        url = f"{KWORK_URL}&page={page}"
        response = requests.get(url, headers=headers)

        if response.status_code == 200:
            soup = BeautifulSoup(response.text, "html.parser")
            order_cards = soup.find_all("div", class_="card__content")

            for order in order_cards:
                title_tag = order.find("a", class_="wants-card__header-title")
                description_tag = order.find("div", class_="wants-card__description")
                price_tag = order.find("div", class_="wants-card__price")

                if not title_tag or not price_tag:
                    continue

                title = title_tag.text.strip()
                description = description_tag.text.strip() if description_tag else ""
                link = "https://kwork.ru" + title_tag["href"]
                price = price_tag.text.strip()

                if any(word.lower() in title.lower() or word.lower() in description.lower() for word in KEYWORDS):
                    orders.append(f"üìå {title}\nüí∞ {price}\nüîó {link}")

    return orders

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–∫–∞–∑–æ–≤ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –Ω–æ–≤—ã—Ö
def check_orders():
    last_orders = []

    while True:
        orders = get_kwork_orders()
        if orders:
            for order in orders:
                if order not in last_orders:
                    bot.send_message(CHAT_ID, order)
                    last_orders.append(order)
        time.sleep(600)

# –†—É—á–Ω–æ–π –ø–æ–∫–∞–∑ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∑–∞–∫–∞–∑–∞
def send_last_order(message):
    last_orders = get_kwork_orders()
    if last_orders:
        bot.send_message(message.chat.id, last_orders[-1])
    else:
        bot.send_message(message.chat.id, "‚ùå –ù–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –∑–∞–∫–∞–∑–æ–≤.")

# –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π –∑–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏
def force_scan_orders(message):
    orders = get_kwork_orders()
    if orders:
        for order in orders:
            bot.send_message(message.chat.id, order)
    else:
        bot.send_message(message.chat.id, "‚ùå –ù–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –∑–∞–∫–∞–∑–æ–≤.")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /last_order
@bot.message_handler(commands=['last_order'])
def handle_last_order(message):
    send_last_order(message)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /force_scan ‚Äî –≤—ã–≤–æ–¥ –∫–Ω–æ–ø–∫–∏
@bot.message_handler(commands=['force_scan'])
def handle_force_scan(message):
    markup = types.InlineKeyboardMarkup()
    btn = types.InlineKeyboardButton(text="üîç –ù–∞–π—Ç–∏ –∑–∞–∫–∞–∑—ã —Å–µ–π—á–∞—Å", callback_data="force_scan_orders")
    markup.add(btn)
    bot.send_message(message.chat.id, "–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è:", reply_markup=markup)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É
@bot.callback_query_handler(func=lambda call: call.data == "force_scan_orders")
def callback_force_scan(call):
    force_scan_orders(call.message)

# –ó–∞–ø—É—Å–∫ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
threading.Thread(target=check_orders, daemon=True).start()

# –°—Ç–∞—Ä—Ç –±–æ—Ç–∞
bot.polling()
